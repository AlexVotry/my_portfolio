/* ----------------------------------
    Expand to full Media Queries
---------------------------------- *

Outputs a media-query block.

## Param {List} $query
  A list of media query features and values, where each `$feature` should have a corresponding `$value`.
  If there is only a single `$value` in `$query`, `$default-feature` is going to be used.

## Example scss - Usage
```scss
   .responsive-element {
      @include media(769px) {
        ...
      }
   }

  .new-context-element {
    @include media(min-width 320px max-width 480px) {
      ...
    }
  }
```

## Example css - CSS Output
```css
  @media screen and (min-width: 769) {
    .responsive-element {
      ...
    }
  }

  @media screen and (min-width: 320px) and (max-width: 480px) {
    .new-context-element {
      ...
    }
  }
```
*/

$default-feature: max-width;

@mixin media($query: $feature $value) {
  @if length($query) == 1 {
    @media screen and ($default-feature: nth($query, 1)) {
      @content;
    }
  } @else {
    $loop-to: length($query);
    $media-query: "screen and ";

    $i: 1;
    @while $i <= $loop-to {
      $media-query: $media-query + "(" + nth($query, $i) + ": " + nth($query, $i + 1) + ") ";

      @if ($i + 1) != $loop-to {
        $media-query: $media-query + "and ";
      }

      $i: $i + 2;
    }

    @media #{$media-query} {
      @content;
    }
  }
}
